<i:arg type="sirius.biz.tenants.UserAccount" name="account" />
<i:arg type="String" name="setUrl" />
<i:arg type="String" name="backUrl" />

<w:pageHeader titleKey="Model.password.set" />

<div class="row">
    <div class="col-md-5">
        <form action="@setUrl" method="post">
            <fieldset>
                <div class="row">
                    <div class="col-md-12 form-group">
                        <label>
                            <span class="input-required">@i18n('Model.password')</span>
                        </label>
                        <input id="password"
                               name="password"
                               type="password"
                               autofocus="autofocus"
                               autocomplete="off"
                               class="form-control input-block-level" />
                    </div>
                </div>
                <div class="row">
                    <div id="confirmationField" class="col-md-12 form-group">
                        <label>
                            <span class="input-required">@i18n('Model.confirmation')</span>
                        </label>
                        <input id="confirmation"
                               name="confirmation"
                               type="password"
                               autofocus="autofocus"
                               autocomplete="off"
                               class="form-control input-block-level" />
                    </div>
                </div>
            </fieldset>

            <div class="form-actions">
                <input type="submit" id="submitBtn" disabled="disabled" class="btn btn-primary" value="@i18n('Model.password.set')">
                <a href="@backUrl" class="btn">@i18n("NLS.back")</a>
            </div>
        </form>
    </div>
    <div class="col-lg-offset-1 col-md-5">
        <table class="table table-bordered password-security-info">
            <tr class="securityLevel muted alert alert-danger" id="hilarious">
                <td>
                    <h4>@i18n('Model.password.hilarious')</h4>
                    <p>
                        @format(i18n('Model.password.hilarious.description')).set('minLength', account.getMinPasswordLength()).format()
                    </p>
                </td>
            </tr>
            <tr class="securityLevel muted alert" id="unsafe">
                <td>
                    <h4>@i18n('Model.password.unsafe')</h4>
                    <p>
                        @format(i18n('Model.password.unsafe.description')).set('saneLength', account.getSanePasswordLength()).format()
                    </p>
                </td>
            </tr>
            <tr class="securityLevel muted alert" id="moderate">
                <td>
                    <h4>@i18n('Model.password.moderate')</h4>
                    <p>@i18n('Model.password.moderate.description')</p>
                </td>
            </tr>
            <tr class="securityLevel muted alert" id="stateOfTheArt">
                <td>
                    <h4>@i18n('Model.password.stateOfTheArt') <small>(@i18n('Model.password.recommended'))</small></h4>
                    <p>@i18n('Model.password.stateOfTheArt.description')</p>
                </td>
            </tr>
        </table>
    </div>
</div>


<script type="text/javascript">

    var passwordMinLength = @account.getMinPasswordLength();
    var passwordSaneLength = @account.getSanePasswordLength();

    $(document).ready(function(){
        $('#password').keyup(function(){

            // Check if password and confirmation match
            verifyConfirmation();

            // Reset all
            $('.securityLevel').removeClass("alert-info").removeClass("alert-danger").removeClass("alert-success");

            // Perform password audit
            var value = $(this).val();
            if (value.length < passwordMinLength) {
                $('#hilarious').addClass('alert-danger');
                $('#submitBtn').attr('disabled', 'diabled');
            } else if (value.length < passwordSaneLength || /^[a-z]+$/.test(value)
                || /^[A-Z]+$/.test(value) || /^[0-9]+$/.test(value))
            {
                $('#unsafe').addClass('alert-info');
            } else if (/^[a-zA-Z0-9]+$/.test(value)) {
                $('#moderate').addClass('alert-info');
            } else {
                $('#stateOfTheArt').addClass('alert-success');
            }
        });

        $('#confirmation').keyup(function(){
            verifyConfirmation();
        });
    });

    function verifyConfirmation() {
        var pw = $('#password').val();
        var conf = $('#confirmation').val();
        if (pw == conf && pw.length >= passwordMinLength) {
            $('#submitBtn').removeAttr('disabled');
            $('#confirmationField').removeClass('has-error');
        } else if($('#password').val().length) {
            $('#submitBtn').attr('disabled', 'diabled');
            $('#confirmationField').addClass('has-error');
        }
    }

</script>


